#!/usr/bin/python

import os
from eagle_automation.config import *
from eagle_automation.export import BadExtension, EaglePNGExport
import subprocess
import sys
import tempfile
from PIL import Image, ImageOps, ImageChops 

def to_png(in_path):

	workdir = tempfile.mkdtemp()

	extension = in_path.split('.')[-1].lower()
	if extension == 'brd':
		layers = LAYERS.values()
		out_paths = [	os.path.join(workdir, layer + '.png')
				for layer in LAYERS.iterkeys() ]
	elif extension == 'sch':
		layers = ['ALL']
		out_paths = ['all.png']
	else:
		os.rmdir(workdir)
		raise BadExtension

	export = EaglePNGExport(workdir=workdir)
	export.export(in_path, layers, out_paths)

	oim = None
	for i, out_path in enumerate(out_paths):
		im = Image.open(out_path).convert("L")
		if oim is None:
			oim = im
		else:
			oim = Image.blend(oim, im, 1.0/(1.0+i))

		os.unlink(out_path)

	os.rmdir(workdir)

	return oim

def main():
	try:
		a_im = to_png(sys.argv[1])
		b_im = to_png(sys.argv[2])
	except BadExtension:
		print "Skipping: not a board or schematic"
		return

	added = ImageOps.autocontrast(ImageChops.subtract(b_im, a_im), 0)
	deled = ImageOps.autocontrast(ImageChops.subtract(a_im, b_im), 0)
	same = Image.blend(a_im, b_im, 0.5)

	deled = ImageOps.colorize(deled, "#000", "#f00")
	added = ImageOps.colorize(added, "#000", "#00f")
	same = ImageOps.colorize(same, "#000", "#777")

	im = ImageChops.add(ImageChops.add(added, deled), same)

	im.show()

main()
